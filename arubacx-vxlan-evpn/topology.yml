---

defaults.sources.extra: [ netlab-defaults.yml ]

groups:
  hosts:
    members: [ host1, host2, host3, host4 ]
    device: linux
  leaf:
    members: [ leaf1, leaf2 ]
    device: arubacx
    module: [ vlan, vrf, vxlan, ospf, bgp, evpn, gateway ]
    node_data:
      bgp:
        as: 65000
        advertise_loopback: false
        activate:
          ipv4: [ ebgp ]
  spine:
    members: [ spine1, spine2 ]
    module: [ ospf, bgp, evpn ]
    device: arubacx
    node_data:
      bgp:
        rr: True
        as: 65000
        advertise_loopback: false
        activate:
          ipv4: []

vrfs:
  tenant:
    ospf: False
    evpn.transit_vni: True

vlans:
  red:
    vrf: tenant
    gateway: True
  blue:
    vrf: tenant
    gateway: True
  green:
    vrf: tenant
    gateway: True
  to_rtr:
    vrf: tenant

nodes:
  spine1:
    id: 1
  spine2:
    id: 2
  leaf1:
    id: 11
  leaf2:
    id: 12
  host1:
    id: 141
  host2:
    id: 142
  host3:
    id: 143
  host4:
    id: 144
  rtr:
    device: arubacx
    id: 130
    module: [ bgp ]
    bgp:
      as: 65222
      advertise_loopback: True


links:
- spine1:
  leaf1:
  mtu: 1600
  ospf.area: 0

- spine1:
  leaf2:
  mtu: 1600
  ospf.area: 0

- spine2:
  leaf1:
  mtu: 1600
  ospf.area: 0

- spine2:
  leaf2:
  mtu: 1600
  ospf.area: 0


- host1:
  leaf1:
    vlan.access: red
- host2:
  leaf2:
    vlan.access: red
- host3:
  leaf1:
    vlan.access: blue
- host4:
  leaf2:
    vlan.access: green

- rtr:
  leaf2:
    vlan.access: to_rtr

# Since netlab creates an iBGP session between the two RR (the spines),
# let's create this direct link to avoid this session to go through leaf links.
# In real world, spines are not connected to each-other, and an iBGP session between them shall not exist.
- spine1:
  spine2:
  ospf.area: 0
  mtu: 1600

_include: [ validate.yml ]

